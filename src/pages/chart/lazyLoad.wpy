<style lang="less" scoped>
  .container {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
  ec-canvas {
    position: absolute;
    top: 80px;
    bottom: 0;
    left: 0;
    right: 0;
  }

  button {
    margin: 10px;
  }
</style>

<template>
<!--index.wxml-->
<!-- https://github.com/Chris-wei/wx-component -->
<view class="container">
  <button @tap="init" wx:if="{{!isLoaded}}">加载图表</button>
  <button @tap="dispose" wx:if="{{isLoaded && !isDisposed}}">释放图表</button>
  <echarts wx:if="{{!isDisposed}}" :ec="ec" />
  <!-- <ec-canvas wx:if="{{!isDisposed}}" id="mychart-dom-bar" canvas-id="mychart-bar" ec="{{ ec }}"></ec-canvas> -->
</view>
  <!-- <view class="container">
    <echarts :ec="ec" />
  </view> -->
</template>

<script>
  import wepy from 'wepy'
  import Echarts from '../../components/echart'
  export default class LazyLoad extends wepy.page {
    config = {
      'navigationBarTitleText': '延迟加载图表'
    };
    components = {
      echarts: Echarts,
    }
    data = {
      ec: {
        // 将 lazyLoad 设为 true 后，需要手动初始化图表
        lazyLoad: true
      },
      isLoaded: false,
      isDisposed: false
    }
    methods = {
      // 点击按钮后初始化图表
      init() {
        this.isLoaded = true
        this.isDisposed = false
        // const option = this.getOption()
        // console.log(getOption())
        this.ec.option = this.getOption()
        console.log(this.ec.option)
        // this.echarts.echarts = this.setOption(this.echarts.echarts)
      },
      dispose() {
        if (this.chart) {
          this.chart.dispose()
        }

        this.setData({
          isDisposed: true
        })
      }
    }
    onShow() {
    }
    onLoad() {
        // 获取组件
    //   this.ecComponent = this.selectComponent('#mychart-dom-bar')
    }
    getOption() {
      const option = {
        color: ['#37a2da', '#32c5e9', '#67e0e3'],
        tooltip: {
          trigger: 'axis',
          axisPointer: {            // 坐标轴指示器，坐标轴触发有效
            type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
          }
        },
        legend: {
          data: ['热度', '正面', '负面']
        },
        grid: {
          left: 20,
          right: 20,
          bottom: 15,
          top: 40,
          containLabel: true
        },
        xAxis: [{
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#999'
            }
          },
          axisLabel: {
            color: '#666'
          }
        }],
        yAxis: [{
          type: 'category',
          axisTick: { show: false },
          data: ['汽车之家', '今日头条', '百度贴吧', '一点资讯', '微信', '微博', '知乎'],
          axisLine: {
            lineStyle: {
              color: '#999'
            }
          },
          axisLabel: {
            color: '#666'
          }
        }],
        series: [{
          name: '热度',
          type: 'bar',
          label: {
            normal: {
              show: true,
              position: 'inside'
            }
          },
          data: [300, 270, 340, 344, 300, 320, 310],
          itemStyle: {
          // emphasis: {
          //   color: '#37a2da'
          // }
          }
        },
        {
          name: '正面',
          type: 'bar',
          stack: '总量',
          label: {
            normal: {
              show: true
            }
          },
          data: [120, 102, 141, 174, 190, 250, 220],
          itemStyle: {
          // emphasis: {
          //   color: '#32c5e9'
          // }
          }
        },
        {
          name: '负面',
          type: 'bar',
          stack: '总量',
          label: {
            normal: {
              show: true,
              position: 'left'
            }
          },
          data: [-20, -32, -21, -34, -90, -130, -110],
          itemStyle: {
          // emphasis: {
          //   color: '#67e0e3'
          // }
          }
        }]
      }
      // this.chart.setOption(option)
      return option
    }
  }
</script>
